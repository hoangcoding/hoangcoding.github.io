{"version":3,"sources":["webpack:///./src/components/atoms/SEO/index.tsx","webpack:///./src/components/molecules/Repository/index.tsx","webpack:///./src/components/organisms/Repositories/index.tsx","webpack:///./src/pages/index.tsx"],"names":["SEO","description","lang","meta","title","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Repository","repo","full_name","html_url","homepage","stargazers_count","isExternal","includes","repoLink","className","styles","repoTitle","href","Icon","memo","repos","section","sectionTitle","map","key","pageContext"],"mappings":"uLAkBaA,EAAmC,SAAC,GAAuC,IAArCC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAClEC,EAD8E,OAC9EA,KAcFC,EAAkBL,GAAeI,EAAKE,aAAaN,YAEzD,OACE,kBAAC,IAAD,CACEO,eAAgB,CACdN,QAEFE,MAAOA,EACPK,cAAa,QAAUJ,EAAKE,aAAaH,MACzCD,KAAM,CACJ,CACEO,KAAM,cACNC,QAASL,GAEX,CACEM,SAAU,WACVD,QAASP,GAEX,CACEQ,SAAU,iBACVD,QAASL,GAEX,CACEM,SAAU,UACVD,QAAS,WAEX,CACED,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,QAASN,EAAKE,aAAaM,QAE7B,CACEH,KAAM,gBACNC,QAASP,GAEX,CACEM,KAAM,sBACNC,QAASL,IAEXQ,OAAOX,MAIfH,EAAIe,aAAe,CACjBb,KAAM,KACNC,KAAM,GACNF,YAAa,K,qWC7EA,SAASe,EAAT,GAA4C,IAAtBC,EAAsB,EAAtBA,KAEjCP,EAMEO,EANFP,KACAQ,EAKED,EALFC,UACAjB,EAIEgB,EAJFhB,YACAkB,EAGEF,EAHFE,SACAC,EAEEH,EAFFG,SACAC,EACEJ,EADFI,iBAGIC,GAAcJ,EAAUK,SAAS,eAIjCC,EACK,SAATd,GAA4B,cAATA,IAAyBU,GAAYE,EACpDH,EACAC,EAEN,OACE,yBAAKK,UAAWC,IAAOT,MACrB,wBAAIQ,UAAWC,IAAOC,WACpB,uBAAGC,KAAMJ,GAAWF,EAAaJ,EAAYR,IAE/C,2BAAIT,GACJ,uBAAGwB,UAAWC,IAAOvB,MACT,cAATO,GAAiC,SAATA,EACrB,MACCY,GACHF,GACE,uBAAGQ,KAAMR,GACP,kBAACS,EAAA,EAAD,CAAMnB,KAAK,YADb,cAKJ,uBAAGkB,KAAMT,GACP,kBAACU,EAAA,EAAD,CAAMnB,KAAK,WADb,WAIA,uBAAGkB,KAAST,EAAL,eACL,kBAACU,EAAA,EAAD,CAAMnB,KAAK,SADb,IACwBW,KC1BjBS,sBAff,YAA+C,IAAvBC,EAAuB,EAAvBA,MACtB,OAAKA,EAGH,6BAASN,UAAWC,IAAOM,SACzB,wBAAIP,UAAWC,IAAOO,cAAtB,wBACA,yBAAKR,UAAWC,IAAOK,OACpBA,EAAMG,KAAI,SAACjB,GAAD,OACT,kBAACD,EAAD,CAAYmB,IAAKlB,EAAKP,KAAMO,KAAMA,SAPvB,Q,YCQNa,0BATf,YAAqD,IAArCM,EAAqC,EAArCA,YACd,OACE,oCACE,kBAACpC,EAAA,EAAD,CAAKI,MAAM,SACX,kBAAC,EAAD,CAAc2B,MAAOK,EAAYL","file":"component---src-pages-index-tsx-442d26061428192c5e29.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React, { FunctionComponent } from \"react\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\ntype SeoProps = {\n  lang?: any,\n  meta?: any,\n  description?: string,\n  title?: string\n}\n\nexport const SEO: FunctionComponent<SeoProps> = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}","import React from 'react'\nimport Icon from '../../atoms/Icon'\nimport styles from './Repository.module.scss'\n\n\nexport default function Repository({ repo } : {repo: any}) {\n  const {\n    name,\n    full_name,\n    description,\n    html_url,\n    homepage,\n    stargazers_count\n  } = repo\n\n  const isExternal = !full_name.includes('hoangcoding')\n\n  // for blog & portfolio and if there's no homepage, use github url\n  // else use homepage field\n  const repoLink =\n    name === 'blog' || name === 'portfolio' || !homepage || isExternal\n      ? html_url\n      : homepage\n\n  return (\n    <div className={styles.repo}>\n      <h1 className={styles.repoTitle}>\n        <a href={repoLink}>{isExternal ? full_name : name}</a>\n      </h1>\n      <p>{description}</p>\n      <p className={styles.meta}>\n        {name === 'portfolio' || name === 'blog'\n          ? null\n          : !isExternal &&\n          homepage && (\n            <a href={homepage}>\n              <Icon name=\"Compass\" /> More info\n            </a>\n          )}\n\n        <a href={html_url}>\n          <Icon name=\"GitHub\" /> GitHub\n        </a>\n\n        <a href={`${html_url}/stargazers`}>\n          <Icon name=\"Star\" /> {stargazers_count}\n        </a>\n      </p>\n    </div>\n  )\n}","import React, { memo } from 'react'\nimport styles from './Repositories.module.scss'\nimport Repository from \"../../molecules/Repository\"\n\nfunction Repositories({ repos }: {repos: any}) {\n  if (!repos) return null\n\n  return (\n    <section className={styles.section}>\n      <h1 className={styles.sectionTitle}>Open Source Projects</h1>\n      <div className={styles.repos}>\n        {repos.map((repo: any) => (\n          <Repository key={repo.name} repo={repo} />\n        ))}\n      </div>\n    </section>\n  )\n}\n\nexport default memo(Repositories)\n","import React, { memo } from \"react\"\nimport Repositories from \"../components/organisms/Repositories\"\nimport { SEO } from \"../components/atoms/SEO\"\n\nfunction Home({ pageContext }: { pageContext: any }) {\n  return (\n    <>\n      <SEO title=\"Home\"/>\n      <Repositories repos={pageContext.repos} />\n    </>\n  )\n}\n\nexport default memo(Home)"],"sourceRoot":""}